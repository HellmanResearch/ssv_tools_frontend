
const schema_placeholder = '支持的字段类型：Group Boolean Char IPAddress Integer Float DateTime Date Time Choice MultipleChoice \n公共属性：many required default default_number unit skip help_text \n数字属性：max_value min_value \n字符串属性: max_length min_length \n选择属性: choices\n示例:\n{\n"apps":{\n\t"many":true,\n\t"type":"Char",\n\t"unit":null,\n\t"required":true,\n\t"help_text":"应用名"\n},\n"rear_end":{\n        "many":false,\n        "type":"Group",\n        "unit":null,\n        "label":"rear_end",\n        "childs":{\n            "port":{\n                "many":false,\n                "type":"Integer",\n                "unit":null,\n                "label":"port",\n                "default":"3389",\n                "required":true,\n                "help_text":null,\n                "max_value":65535\n            },\n            "protocol":{\n                "many":false,\n                "type":"Choice",\n                "unit":null,\n                "label":"protocol",\n                "choices":[\n                    [\n                        0,\n                        "http"\n                    ],\n                    [\n                        1,\n                        "https"\n                    ],\n                    [\n                        2,\n                        "tcp"\n                    ],\n                    [\n                        3,\n                        "udp"\n                    ]\n                ],\n                "default":1,\n                "required":true,\n                "help_text":null\n            }\n        },\n        "default":null,\n        "required":false,\n        "help_text":null\n    }\n}'
const optional_value_placeholder = '系统会将当前用户信息以json字符串传入脚本\n返回数据格式必须为[["value1", "label1"],["value2", "label2"]]类型json字符串\n脚本最长执行时间为15秒\n示例:\n#!/usr/bin/env python\n# coding: utf-8\nimport sys\nimport json\nimport requests\n\nuser_info = json.loads(sys.argv[1])\nresponse = requests.get("http://cmdb.hellobike.cn/resources")\nresources = response.json()\noptional_values = [[item["name"], item["label"]] for item in resources]\nprint(json.dumps(optional_values))'
const verification_placeholder = '系统会将当前用户信息和用户申请参数以两个json字符串传入脚本\n脚本返回退出状态码为0则验证通过\n脚本最长执行时间为15秒 超时将会被杀死并返回验证失败\n示例:\n#!/usr/bin/env python\n# coding: utf-8\nimport sys\nimport json\nimport requests\n\nuser_info = json.loads(sys.argv[1])\nuser_input_args = json.loads(sys.argv[1])\nresponse = requests.get("http://cmdb.hellobike.cn/resources")\nresources = response.json()\nname_list = [item["name"] for item in resources]\nif user_input_args["name"] in name_list:\n    print("资源已存在")\n    exit(1)'
const process_placeholder = '系统会将当前用户信息、用户申请参数、一级审批参数、二级审批参数。。。处理人填写的参数依次以json字符串传入脚本\n脚本返回退出状态码为0则处理成功\n脚本最长执行时间为10分钟 超时将会被杀死并标记为处理失败\n示例:\n#!/usr/bin/env python3\nimport sys\nimport json\nimport requests\n\nuser_info = json.loads(sys.argv[1])\nuser_input_args = json.loads(sys.argv[2])\napproval_args1 = json.loads(sys.argv[3])\napproval_args2 = json.loads(sys.argv[4])\napproval_args3 = json.loads(sys.argv[5])\n\ndata = {\n    "username": user_info["username"],\n    "ecs_type": user_input_args["ecs_type"],\n    "available_partition": approval_args1["available_partition"]\n}\ntry:\n    response = requests.post("http://api.aliyun.com/ecs", json.dumps(data), timeout=10)\nexcept Exception as exc:\n    print("请求阿里云失败: {}".format(exc))\n    exit(1)\nprint("处理结果:\n{}".format(response.text))\n'
const approver_script_placeholder = '系统会将当前用户信息和用户申请参数以两个json字符串传入脚本\n返回数据格式必须为["username1", "username1"]类型json字符串\n返回空列表则本节点不需要审批\n脚本最长执行时间为15秒\n示例:\n#!/usr/bin/env python3\nimport sys\nimport json\nimport requests\n\nuser_info = json.loads(sys.argv[1])\napplication_args = json.loads(sys.argv[2])\nserver_name = application_args["server_name"]\ntry:\n    response = requests.get("http://cmdb.hellobike.cn/resources/ecs?server_name={}".format(server_name), timeout=10)\nexcept Exception:\n    print("请求CMDB失败")\n    exit(1)\nserver_info = response.json()\nteam_name = server_info["team_name"]\ntry:\n    response = requests.post("http://cmdb.hellobike.cn/api/getTeamLeaders/", data=json.dumps({"name": team_name}), timeout=10)\nexcept Exception:\n    print("请求CMDB失败")\n    exit(1)\nleaders = [item["user_name"].split("@")[0] for item in response.json()["data"]]\nprint(json.dumps(leaders))'


export default {
    schema_placeholder,
    optional_value_placeholder,
    verification_placeholder,
    process_placeholder,
    approver_script_placeholder
}